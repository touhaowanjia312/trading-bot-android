name: 🤖 构建Android应用

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v3
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: ☕ 设置Java环境
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
        
    - name: 📦 安装系统依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip \
          build-essential libsdl2-dev libsdl2-image-dev \
          libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev \
          libswscale-dev libavformat-dev libavcodec-dev \
          zlib1g-dev autoconf libtool pkg-config \
          libffi-dev libssl-dev
          
    - name: 🐍 安装Python依赖
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        pip install "kivy[base]==2.1.0"
        
    - name: 📱 设置Android SDK
      run: |
        # 设置Android SDK路径
        export ANDROID_HOME=$HOME/Android/Sdk
        mkdir -p $ANDROID_HOME
        
        # 下载Android SDK命令行工具
        cd $ANDROID_HOME
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mv cmdline-tools latest
        mkdir cmdline-tools
        mv latest cmdline-tools/
        
        # 设置环境变量
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        
        # 安装SDK组件
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;33.0.0"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653"
        
    - name: 🔧 验证buildozer配置
      run: |
        # 检查buildozer.spec是否存在
        if [ ! -f buildozer.spec ]; then
          echo "创建buildozer.spec配置文件"
          buildozer init
        fi
        
        # 显示配置信息
        echo "📋 Buildozer配置信息:"
        head -20 buildozer.spec
        
    - name: 🔨 构建Android APK
      run: |
        echo "🚀 开始构建Android APK..."
        echo "⏳ 这可能需要20-40分钟，请耐心等待..."
        
        # 设置构建环境变量
        export ANDROID_HOME=$HOME/Android/Sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        # 开始构建
        buildozer android debug
        
    - name: 📊 显示构建结果
      run: |
        echo "📦 构建完成！"
        if [ -d "bin" ]; then
          echo "📱 生成的APK文件:"
          ls -la bin/*.apk || echo "未找到APK文件"
          
          # 显示APK信息
          for apk in bin/*.apk; do
            if [ -f "$apk" ]; then
              echo "📏 $apk 大小: $(du -h "$apk" | cut -f1)"
            fi
          done
        else
          echo "❌ bin目录不存在"
        fi
        
    - name: 📤 上传APK文件
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: 📝 创建发布信息
      if: success()
      run: |
        echo "🎉 Android应用构建成功！" > release_info.txt
        echo "" >> release_info.txt
        echo "📱 构建信息:" >> release_info.txt
        echo "- 构建时间: $(date)" >> release_info.txt
        echo "- 构建分支: ${GITHUB_REF#refs/heads/}" >> release_info.txt
        echo "- 提交哈希: ${GITHUB_SHA:0:7}" >> release_info.txt
        echo "" >> release_info.txt
        echo "📥 下载说明:" >> release_info.txt
        echo "1. 点击上方的 'Artifacts' 下载APK文件" >> release_info.txt
        echo "2. 将APK传输到Android设备" >> release_info.txt
        echo "3. 允许'未知来源'安装并点击APK安装" >> release_info.txt
        echo "4. 首次运行时授权所需权限" >> release_info.txt
        
    - name: 📤 上传发布信息
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: release-info
        path: release_info.txt
        retention-days: 30

  # 可选: 自动发布到Release
  release:
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 下载APK文件
      uses: actions/download-artifact@v3
      with:
        name: android-apk
        path: apk/
        
    - name: 🏷️ 创建Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: "交易跟单机器人 v${{ github.run_number }}"
        body: |
          🤖 **Android交易跟单机器人**
          
          📱 **安装说明:**
          1. 下载下方的APK文件
          2. 在Android设备上允许"未知来源"安装
          3. 点击APK文件进行安装
          4. 首次运行时授权所需权限
          5. 配置API密钥后即可开始使用
          
          ⚠️ **注意事项:**
          - 仅供学习和研究使用
          - 请在充分了解风险后使用
          - 建议先用小额资金测试
          
          🔄 **构建信息:**
          - 构建时间: ${{ github.event.head_commit.timestamp }}
          - 提交哈希: ${{ github.sha }}
        files: apk/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
